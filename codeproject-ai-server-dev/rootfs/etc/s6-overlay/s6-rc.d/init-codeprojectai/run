#!/command/with-contenv bashio
# shellcheck shell=bash

mkdir -p "/config/runtimes"
mkdir -p "/config/modules"

# Check if the runtimes directory is a symlink, if not create it
if [! -L "/app/server/runtimes"]; then
    rm -rf "/app/server/runtimes"
    ln -s "/config/runtimes" "/app/server/runtimes"
fi

# Check if the modules directory is a symlink, if not create it
if [ ! -L "/app/server/modules"]; then
    rm -rf "/app/server/modules"
    ln -s "/config/modules" "/app/server/modules"
fi

if [ ! -L "/app/server/appsettings.json" ]; then  
    cp /app/server/appsettings.json /config/appsettings.json
    rm /app/server/appsettings.json
    ln -s /config/appsettings.json /app/server/appsettings.json
fi

# Check if the appsettings.json file exists in the config directory, if yes copy it in
if [ -f "/config/appsettings.json" ]; then
    bashio::log.info "Found appsettings.json in config directory"
    cp /config/appsettings.json /app/server/appsettings.json
else
    bashio::log.info "No appsettings.json found in config directory"
    bashio::log.info "Creating appsettings.json from template"
    cp /app/server/appsettings.json /config/appsettings.json
    cat /app/server/appsettings.json  | sed -e 's/\/\/ .*$//g' | jq ".ServerOptions.DisableLegacyPort=true" > /app/server/appsettings.json.new
    mv /app/server/appsettings.json.new /app/server/appsettings.json
    cp /app/server/appsettings.json /config/appsettings.json
fi

cd /app/server || exit 1
exec bash ../setup.sh
